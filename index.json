[{"categories":null,"contents":" Hello World A sample go program is show here.\npackage main import \u0026#34;fmt\u0026#34; func main() { message := greetMe(\u0026#34;world\u0026#34;) fmt.Println(message) } func greetMe(name string) string { return \u0026#34;Hello, \u0026#34; + name + \u0026#34;!\u0026#34; } Run the program as below:\n$ go run hello.go Variables Normal Declaration:\nvar msg string msg = \u0026#34;Hello\u0026#34; Shortcut:\nmsg := \u0026#34;Hello\u0026#34; Constants const Phi = 1.618 ","date":"January 1, 0001","hero":"/images/default-hero.jpg","permalink":"https://mrpenguin07.github.io/notes/go/basic/introduction/","summary":" Hello World A sample go program is show here.\npackage main import \u0026#34;fmt\u0026#34; func main() { message := greetMe(\u0026#34;world\u0026#34;) fmt.Println(message) } func greetMe(name string) string { return \u0026#34;Hello, \u0026#34; + name + \u0026#34;!\u0026#34; } Run the program as below:\n$ go run hello.go Variables Normal Declaration:\nvar msg string msg = \u0026#34;Hello\u0026#34; Shortcut:\nmsg := \u0026#34;Hello\u0026#34; Constants const Phi = 1.618 ","tags":null,"title":"Go পরিচিতি"},{"categories":null,"contents":"","date":"January 1, 0001","hero":"/images/default-hero.jpg","permalink":"https://mrpenguin07.github.io/notes/go/basic/_index.bn/","summary":"","tags":null,"title":"Go বেসিক"},{"categories":null,"contents":"","date":"January 1, 0001","hero":"/images/default-hero.jpg","permalink":"https://mrpenguin07.github.io/notes/go/advanced/_index.bn/","summary":"","tags":null,"title":"অ্যাডভান্সড"},{"categories":null,"contents":" Strings str := \u0026#34;Hello\u0026#34; Multiline string\nstr := `Multiline string` Numbers Typical types\nnum := 3 // int num := 3. // float64 num := 3 + 4i // complex128 num := byte(\u0026#39;a\u0026#39;) // byte (alias for uint8) Other Types\nvar u uint = 7 // uint (unsigned) var p float32 = 22.7 // 32-bit float Arrays // var numbers [5]int numbers := [...]int{0, 0, 0, 0, 0} Pointers func main () { b := *getPointer() fmt.Println(\u0026#34;Value is\u0026#34;, b) func getPointer () (myPointer *int) { a := 234 return \u0026amp;a a := new(int) *a = 234 Pointers point to a memory location of a variable. Go is fully garbage-collected.\nType Conversion i := 2 f := float64(i) u := uint(i) Slice slice := []int{2, 3, 4} slice := []byte(\u0026#34;Hello\u0026#34;) ","date":"January 1, 0001","hero":"/images/default-hero.jpg","permalink":"https://mrpenguin07.github.io/notes/go/basic/types/","summary":"Strings str := \u0026#34;Hello\u0026#34; Multiline string\nstr := `Multiline string` Numbers Typical types\nnum := 3 // int num := 3. // float64 num := 3 + 4i // complex128 num := byte(\u0026#39;a\u0026#39;) // byte (alias for uint8) Other Types\nvar u uint = 7 // uint (unsigned) var p float32 = 22.7 // 32-bit float Arrays // var numbers [5]int numbers := [...]int{0, 0, 0, 0, 0} Pointers func main () { b := *getPointer() fmt.","tags":null,"title":"বেসিক টাইপ সমূহ"},{"categories":null,"contents":" Condition if day == \u0026#34;sunday\u0026#34; || day == \u0026#34;saturday\u0026#34; { rest() } else if day == \u0026#34;monday\u0026#34; \u0026amp;\u0026amp; isTired() { groan() } else { work() } if _, err := doThing(); err != nil { fmt.Println(\u0026#34;Uh oh\u0026#34;) Switch switch day { case \u0026#34;sunday\u0026#34;: // cases don\u0026#39;t \u0026#34;fall through\u0026#34; by default! fallthrough case \u0026#34;saturday\u0026#34;: rest() default: work() } Loop for count := 0; count \u0026lt;= 10; count++ { fmt.Println(\u0026#34;My counter is at\u0026#34;, count) } entry := []string{\u0026#34;Jack\u0026#34;,\u0026#34;John\u0026#34;,\u0026#34;Jones\u0026#34;} for i, val := range entry { fmt.Printf(\u0026#34;At position %d, the character %s is present\\n\u0026#34;, i, val) n := 0 x := 42 for n != x { n := guess() } ","date":"January 1, 0001","hero":"/images/default-hero.jpg","permalink":"https://mrpenguin07.github.io/notes/go/basic/flow-control/","summary":"Condition if day == \u0026#34;sunday\u0026#34; || day == \u0026#34;saturday\u0026#34; { rest() } else if day == \u0026#34;monday\u0026#34; \u0026amp;\u0026amp; isTired() { groan() } else { work() } if _, err := doThing(); err != nil { fmt.Println(\u0026#34;Uh oh\u0026#34;) Switch switch day { case \u0026#34;sunday\u0026#34;: // cases don\u0026#39;t \u0026#34;fall through\u0026#34; by default! fallthrough case \u0026#34;saturday\u0026#34;: rest() default: work() } Loop for count := 0; count \u0026lt;= 10; count++ { fmt.Println(\u0026#34;My counter is at\u0026#34;, count) } entry := []string{\u0026#34;Jack\u0026#34;,\u0026#34;John\u0026#34;,\u0026#34;Jones\u0026#34;} for i, val := range entry { fmt.","tags":null,"title":"Flow Control"},{"categories":null,"contents":" Condition if day == \u0026#34;sunday\u0026#34; || day == \u0026#34;saturday\u0026#34; { rest() } else if day == \u0026#34;monday\u0026#34; \u0026amp;\u0026amp; isTired() { groan() } else { work() } if _, err := doThing(); err != nil { fmt.Println(\u0026#34;Uh oh\u0026#34;) ","date":"January 1, 0001","hero":"/images/default-hero.jpg","permalink":"https://mrpenguin07.github.io/notes/go/advanced/files/","summary":" Condition if day == \u0026#34;sunday\u0026#34; || day == \u0026#34;saturday\u0026#34; { rest() } else if day == \u0026#34;monday\u0026#34; \u0026amp;\u0026amp; isTired() { groan() } else { work() } if _, err := doThing(); err != nil { fmt.Println(\u0026#34;Uh oh\u0026#34;) ","tags":null,"title":"ফাইল ম্যানিপুলেশন"},{"categories":null,"contents":" Variable NAME=\u0026#34;John\u0026#34; echo $NAME echo \u0026#34;$NAME\u0026#34; echo \u0026#34;${NAME} Condition if [[ -z \u0026#34;$string\u0026#34; ]]; then echo \u0026#34;String is empty\u0026#34; elif [[ -n \u0026#34;$string\u0026#34; ]]; then echo \u0026#34;String is not empty\u0026#34; fi ","date":"January 1, 0001","hero":"/images/default-hero.jpg","permalink":"https://mrpenguin07.github.io/notes/bash/basic/","summary":" Variable NAME=\u0026#34;John\u0026#34; echo $NAME echo \u0026#34;$NAME\u0026#34; echo \u0026#34;${NAME} Condition if [[ -z \u0026#34;$string\u0026#34; ]]; then echo \u0026#34;String is empty\u0026#34; elif [[ -n \u0026#34;$string\u0026#34; ]]; then echo \u0026#34;String is not empty\u0026#34; fi ","tags":null,"title":"ব্যাশ ভেরিয়েবল"},{"categories":null,"contents":"What\u0026rsquo;s new with bcachefs Over the past year, my journey with bcachefs - in pursuit of unknown benefits - sure has been interesting, and full of drama if one reads the fs kernel mailing list. The project, with its vow to deliver enhanced performance and reliability, has no doubt made great progress and reached what many believed would (or should) never happen. The recent announcement of its inclusion in 6.7 Kernel was a triumphant moment, marking a significant milestone for the project. However the phoronix benchmark results presented have been less than impressive, albeit I do question the testing methadology.\nThe integration of Bcachefs into the kernel brings it one step closer to becoming a filesystem chosen by many rather than a few willing guinea pigs. Despite these results, the potential is there and it\u0026rsquo;s features are indicative of a promising future.\nThe (not so) juicy numbers Source: Phoronix Benchmarks The numbers, when juxtaposed with other filesystems, revealed a performance gap that Bcachefs needs to bridge to stand toe-to-toe with its counterparts. The benchmarks were a sobering reminder that while strides have been made, the road ahead is still long and winding.\nDespite the slight setback, the community behind bcachefs is vibrant and determined, and with the right amount of polish and tuning, I believe bcachefs can rise to the occasion. The kernel integration is a testament to the filesystem’s potential, and I patiently wait to see to how it evolves.\nRelated Video ","date":"November 5, 2023","hero":"/posts/category/interestingprojects/bcachefs/bcachefs-6.7/images/bcachefs.jpg","permalink":"https://mrpenguin07.github.io/posts/category/interestingprojects/bcachefs/bcachefs-6.7/","summary":"What\u0026rsquo;s new with bcachefs Over the past year, my journey with bcachefs - in pursuit of unknown benefits - sure has been interesting, and full of drama if one reads the fs kernel mailing list. The project, with its vow to deliver enhanced performance and reliability, has no doubt made great progress and reached what many believed would (or should) never happen. The recent announcement of its inclusion in 6.7 Kernel was a triumphant moment, marking a significant milestone for the project.","tags":["Bcachefs","Linux Kernel","Filesystem Performance"],"title":"Bcachefs: A COWs Journey"},{"categories":null,"contents":"Introducing SwayFX: A Cutting-Edge Fork of the Sway Window Manager Enhanced Rendering with FX_Renderer SwayFX, a pioneering fork of the well-established Wayland window manager Sway, brings revolutionary features and visual enhancements.\nCentral to SwayFX is the fx_renderer, which replaces the simpler wlr_renderer, unleashing the potential of GLES2 for a visually stunning desktop experience.\nKey Features Blur Effects Rounded Corners and Borders Shadows Dim Unfocused Windows Per Application Saturation Control Seamless Integration with Sway SwayFX maintains complete compatibility with the Sway configuration file, allowing users to transition smoothly without needing to alter their existing setups.\nThe following new configuration options can be used to enable the advanced rendering feature set.\nAbove: User wickedlester shows off rounded corners \u0026amp; shadows\nAbove: User Danie shows off inactive blur effects\nNew Configuration Options Window Blur blur enable|disable blur_xray enable|disable blur_passes \u0026lt;integer\u0026gt; blur_radius \u0026lt;integer\u0026gt; Corner Radius corner_radius \u0026lt;val\u0026gt; Window Shadows shadows enable|disable shadows_on_csd enable|disable shadow_blur_radius \u0026lt;integer\u0026gt; shadow_color \u0026lt;hex color\u0026gt; shadow_inactive_color \u0026lt;hex color\u0026gt; LayerShell Effects layer_effects using the syntax \u0026lt;layer namespace\u0026gt; \u0026lt;effects\u0026gt; The current layer namespaces can be shown with\nswaymsg -r -t get_outputs | jq '.[0].layer_shell_surfaces | .[] | .namespace' Available Effects:\nblur \u0026lt;enable|disable\u0026gt; blur_ignore_transparent \u0026lt;enable|disable\u0026gt; shadows \u0026lt;enable|disable\u0026gt; corner_radius \u0026lt;int\u0026gt; Example: layer_effects \u0026quot;waybar\u0026quot; blur enable; shadows enable; corner_radius 6\nDim Unfocused Windows default_dim_inactive \u0026lt;float\u0026gt; for_window [CRITERIA] dim_inactive \u0026lt;float\u0026gt; dim_inactive_colors.unfocused \u0026lt;hex color\u0026gt; dim_inactive_colors.urgent \u0026lt;hex color\u0026gt; Application Saturation for_window [CRITERIA] saturation \u0026lt;set|plus|minus\u0026gt; \u0026lt;val\u0026gt; My Personal Config Have settled, at least for now, with the following config;\nsmart_corner_radius on corner_radius 10 default_dim_inactive 0.05 blur enable blur_passes 2 blur_radius 2 layer_effects \u0026#34;waybar\u0026#34; \u0026#34;blur enable\u0026#34;; shadows enable shadows on shadow_blur_radius 20 Roadmap: What’s Next for SwayFX Fade In/Out Animations Window Movement Animations Check out the SwayFX Github page! ","date":"November 5, 2023","hero":"/posts/category/interestingprojects/swaywm+swayfx/swayfx/images/swayfx_screenshot.jpg","permalink":"https://mrpenguin07.github.io/posts/category/interestingprojects/swaywm+swayfx/swayfx/","summary":"Introducing SwayFX: A Cutting-Edge Fork of the Sway Window Manager Enhanced Rendering with FX_Renderer SwayFX, a pioneering fork of the well-established Wayland window manager Sway, brings revolutionary features and visual enhancements.\nCentral to SwayFX is the fx_renderer, which replaces the simpler wlr_renderer, unleashing the potential of GLES2 for a visually stunning desktop experience.\nKey Features Blur Effects Rounded Corners and Borders Shadows Dim Unfocused Windows Per Application Saturation Control Seamless Integration with Sway SwayFX maintains complete compatibility with the Sway configuration file, allowing users to transition smoothly without needing to alter their existing setups.","tags":["SwayWM","DesktopEffects","Rendering"],"title":"SwayFX: Sway, but with eye candy!"},{"categories":null,"contents":"","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://mrpenguin07.github.io/notes/_index.bn/","summary":"","tags":null,"title":"নোট সমূহ"},{"categories":null,"contents":"Go Notes ","date":"January 1, 0001","hero":"/images/default-hero.jpg","permalink":"https://mrpenguin07.github.io/notes/go/_index.bn/","summary":"Go Notes ","tags":null,"title":"Go এর নোট সমূহ"},{"categories":null,"contents":"Bash Notes ","date":"January 1, 0001","hero":"/images/default-hero.jpg","permalink":"https://mrpenguin07.github.io/notes/bash/_index.bn/","summary":"Bash Notes ","tags":null,"title":"ব্যাশের নোট সমূহ"}]